model Subscription {
  id             String    @id @default(cuid())
  userId         String    @unique
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  plan           String    @default("free")
  isActive       Boolean   @default(false)
  startedAt      DateTime
  expiresAt      DateTime
  canceled       Boolean   @default(false)

  regularLimit   Int       @default(100)
  premiumLimit   Int       @default(10)

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model PromptUsage {
  id         String     @id @default(cuid())
  userId     String
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  type       PromptType
  createdAt  DateTime   @default(now())
  expiresAt  DateTime   // now + 30 days

  @@index([userId, createdAt])
}

enum PromptType {
  REGULAR
  PREMIUM
}

model MessageToken {
  id         String     @id @default(cuid())
  userId     String
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  token      String     @db.Text
  createdAt  DateTime   @default(now())
  expiresAt  DateTime   // now + 30 days

  type       TokenType
}

enum TokenType {
  PROMPT
  COMPLETION
}
